<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学文の博客🥝</title>
  
  
  <link href="https://wenblog.org.edu.kg/atom.xml" rel="self"/>
  
  <link href="https://wenblog.org.edu.kg/"/>
  <updated>2025-06-20T01:08:33.790Z</updated>
  <id>https://wenblog.org.edu.kg/</id>
  
  <author>
    <name>学文の博客🥝</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.998Z</published>
    <updated>2025-06-20T01:08:33.790Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 自动化部署</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.996Z</published>
    <updated>2025-06-20T01:32:00.506Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 岗位需求</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h1>1.新意互动–python全栈实习生</h1><h2 id="岗位需求">岗位需求:</h2><p>1.熟悉agent搭建及后端开发，有相关项目经历</p><p>2.熟悉coze，dify，langchain中的一种或多种，有prompt工程经验</p><p>3.熟悉python，pytorch，使用过知识库，了解RAG的基本原理，熟悉一些经典的机器学习算法，有一定的前后端API开发经验</p><h1>2.理想汽车–后端开发实习生（python）</h1><h2 id="岗位职责">岗位职责:</h2><p>1.飞书生态开发:<br>（1)基于飞书开放平台SDK,参与应用后端API开发与维护<br>(2)设计并实现飞书机器人、消息推送等场景化功能模块<br>2.效率工具开发<br>（1）开发自动化工具，集成飞书API实现业务场景提效<br>(2)参与微服务架构设计，协助搭建高可用后端服务，优化接口性能<br>3.技术文档编写<br>(1)输出模块设计文档、接口文档及SDK使用指南</p><h2 id="任职要求">任职要求:</h2><h3 id="硬性要求">硬性要求</h3><p>1.熟练掌握Python语言，理解OOP、异步编程及常用设计模式<br>2.熟悉至少一个Web框架(Django/Flask/FastAPl)能独立开发RESTful API<br>3.了解HTTP/WebSocket办议，熟悉Postman/Swagger等调试工具<br>4.具备基础数据库知识，能熟练使用MySQL/Redis/MongoDB中的至少一种</p><h3 id="加分项">加分项</h3><p>1.有飞书开放平台开发经验，熟悉事件订阅/消息卡片等机制<br>2.掌握PyTorch/TensorFlow框架，有NLP领域深度学习实践经历</p><h1>3.智百源科技–Python</h1><h2 id="职位详情">职位详情</h2><p>Docker, Django, MySQL, Redis, Linux开发/部署经验, python, java, Flask</p><h3 id="岗位职责-2">岗位职责:</h3><p>1.维护并优化既有产品的Python后端代码;<br>2.完成新产品的后端搭建;<br>3.根据用户的需求，梳理和实现相应的业务逻辑</p><h3 id="岗位要求">岗位要求:</h3><p>1.本科、研究生及以上学历,计算机相关专业在校生;<br>2.每周能保证至少3天的实习时间，实习期6个月或以上;<br>3.熟练掌握常用的Python后端框架，如Django,Flask等，有相关的项目实践经验，能独立完成相应模块的开发及维护工作;<br>4.有良好的学习能力和沟通能力，积极主动，自驱力强;<br>注：python为主，Java为辅的实习岗位,可以接受再投递简历(实习时间不少于6个月)</p><h1>4.七牛云–AI服务后端研发实习生</h1><h2 id="工作职责">工作职责</h2><p>1、参与AIGC/LLM服务平台的工程架构设计和调研<br>2、参与业务系统的开发和测试;</p><h2 id="职位要求">职位要求</h2><p>1、熟练掌握计算机基础知识,包括但不限于操作系统、计算机网络等;<br>2、具备扎实的编程基础，熟练掌握Golang或Python中一门语言，熟悉主要应用框架;<br>3、熟悉Mysql、Redis、MQ等常用WEB组件并了解基本用法;<br>4、了解LLMAPI/Agent/RAG等架构原理者或发表相关论文者优先;<br>5、优秀的沟通和团队协作能力，具备较强的主动学习和创新能力</p><h1>5.Momenta–python后端开发实习生</h1><h2 id="岗位职责-3">岗位职责</h2><p>1、深度参与自动驾驶数据的数据仓库建设<br>2、参与设计并实现自动驾驶相关数据管理系统等核心内容<br>3、开发自动化平台工具<br>4、提高数据使用效率</p><h2 id="岗位要求-2">岗位要求:</h2><p>1、具备扎实的编程基础、优秀的代码设计能力和品味、热爱编程<br>2、语言以golang、python为主，可以接受java、C、c++或其他语言转golang/python<br>3、熟悉Linux基本常用命令,会编写简单的shel脚本<br>4、良好的计算机基础知识，熟悉I/O,cpu,内存，网络等知识，深刻理解计算机原理、有良好的数据结构和算法基础<br>5、熟悉Mysql、Postgresq1、redis、mongo、消息队列等组件</p><h1>步刻时光–python实习生</h1><h2 id="职位详情-2">职位详情</h2><p>python, MySQL, Redis, Flask</p><h2 id="任职要求-2">任职要求:</h2><p>1.熟练使用python,flask fastapi,celery等库<br>2.计算机相关专业，本科或者研究生在校生，实习<br>3.熟悉Linux操作系统，熟练使用Linux相关命令<br>4.有扎实的编程功底，具有良好代码编写习惯善于编写技术文档<br>5.具有良好的人际沟通能力，团队协作能力，思维敏捷<br>6.认真负责</p><h2 id="岗位职责-4">岗位职责:</h2><p>1.参与Flask API,ETL,Amazon接口开发<br>2.协同其他开发人员的工作<br>3.认真负责</p><h1>千渊科技–python开发实习生(大模型应用)</h1><h2 id="岗位职责-5">岗位职责</h2><p>1.负责公司大模型平台和Agent框架以及comfyui节点插件等多个模块的开发和升级工作<br>2.开发维护基于openai等大模型以及工作流如dify和comfyui等在不同行业垂直领域的AI应用。<br>3.能独立完成python项目的开发、调试、部署与上线。<br>4.进行技术调研、可行性分析，系统、流程结构设计、优化、重构。<br>5.重点:熟悉dify源码可以二次开发优先。</p><h2 id="主要技能">主要技能</h2><p>1.熟悉常见的Python Web技术栈,Flask,Diango,ZeroRPC等，能独立完成python项目开发<br>2.精通常见的数据库技术, MySQL,Redis,Rocketmq等，并具备实际的业务落地经验;<br>3.熟悉同步，异步，多线程、socket相关技术，有分布式系统的开发实践经验;<br>4.熟练使用软件设计模式。<br>5.愿意尝试新技术。<br>6.有prompt优化经验。</p><h1>蓝景教育咨询–AI/应用开发实习生</h1><h2 id="职位描述">职位描述</h2><p>1.负责搭建和优化多模态EMIBEDDING模型，用于RAG的向量化知识库的构建与管理，并与微信平台进行集成。<br>2.处理和向量化不同类型的数据，包括文字、图片等，确保RAG模型在不同输入下都能高效检索相关数据。<br>3.负责数据库的优化和维护，采用SQL、FAISS、Milvus等工具进行数据存储和高效检索<br>4.涉及RPA (如影刀）自动化开发，支持大模型的训练与部署，优化API接口调用。<br>5.精通FastGPT、Dify等应用框架，具备LLaMA-Factory、Swift等训练框架的使用经验<br>6.具备分布式训练的经验,熟悉Deepspeed等框架，能够对训练过程中涉及的各种参数进行调优.</p><h2 id="任职要求-3">任职要求:</h2><p>1.本科及以上学历，计算机科学、人工智能、数据科学等相关专业。<br>2.深入了解大模型的训练和部署，具备API接口调用及FastGPT、Dify等应用框架的RAG实战经<br>3.熟悉LLaMA-Factory、Swif等训练框架，最好有分布式训练经验(如Deepspeed)<br>4.精通各类训练数据集，如IDPO、RLHF、PPO等，并熟悉SFT训练方法。<br>5.熟悉多模态数据处理，能够高效地处理和向量化文本、图片数据。<br>6.具备一定的AI模型接入经验，尤其是如何将模型与微信平台(包括企业微信、个人微信、公众号、小程序)结合。<br>7.有较强的主观学习能力和好奇心，能够快速理解并解决技术难题。<br>8.具备较好的团队协作和沟通能力，能够与不同部门进行有效合作。</p><h2 id="技能需求">技能需求:</h2><p>-技术栈：FAISS、Milvus、SQL(MySQL/PostgreSQL等）、Python、RAG<br>-经验要求:向量化模型(如BERT、CLIP等)应用、数据库设计与优化,RAG搭建;大模型训练与部署、API接口调用。<br>-接入技术:微信API、微信小程序开发、企业微信开发<br>其他：良好的沟通能力，能与跨部门团队协作具备强烈的学习兴趣和解决问题的能力</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.995Z</published>
    <updated>2025-06-19T08:43:42.395Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: 八股文</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><p>架构图</p><p><img src="C:/Users/pro/AppData/Roaming/Typora/typora-user-images/image-20250617112218493.png" alt="image-20250617112218493"></p><ul><li>jenkins: CI/CD工具。</li><li>路由侠：内网映射工具，内网映射到外网</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.992Z</published>
    <updated>2025-06-20T01:19:54.821Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: python开发6Django</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h1>增删改查</h1><ul><li>models层</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"></span><br><span class="line"><span class="comment"># Create your views here.</span></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">index</span>(<span class="params">request</span>):</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;ok&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################添加数据###############</span></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line"><span class="keyword">from</span> project02.models <span class="keyword">import</span> BookInfo</span><br><span class="line"><span class="keyword">from</span> project02.models <span class="keyword">import</span> PeopleInfo</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">book = BookInfo(</span><br><span class="line">    name=<span class="string">&#x27;Django&#x27;</span>,</span><br><span class="line">    pub_date=<span class="string">&#x27;2000-1-1&#x27;</span>,</span><br><span class="line">    readcount=<span class="number">10</span>,</span><br><span class="line">)</span><br><span class="line">book.save()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"><span class="comment"># objects相当于一个代理</span></span><br><span class="line">BookInfo.objects.create(</span><br><span class="line">    name=<span class="string">&#x27;测试开发入门&#x27;</span>,</span><br><span class="line">    pub_date=<span class="string">&#x27;2000-1-1&#x27;</span>,</span><br><span class="line">    readcount=<span class="number">200</span>,</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">#######################修改数据#######################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line"></span><br><span class="line">book = BookInfo.objects.get(<span class="built_in">id</span>=<span class="number">9</span>)</span><br><span class="line">book.name = <span class="string">&#x27;运维开发入门&#x27;</span></span><br><span class="line">book.save()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"><span class="comment"># filter过滤</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">9</span>).update(name=<span class="string">&#x27;爬虫入门&#x27;</span>, commentcount=<span class="number">666</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###################删除数据#####################</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式一</span></span><br><span class="line"></span><br><span class="line">book = BookInfo.objects.get(<span class="built_in">id</span>=<span class="number">9</span>)</span><br><span class="line"><span class="comment"># 物理删除（直接删除），逻辑删除（is_delete）</span></span><br><span class="line">book.delete()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 方式二</span></span><br><span class="line"></span><br><span class="line">BookInfo.objects.get(<span class="built_in">id</span>=<span class="number">9</span>).delete()</span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(<span class="built_in">id</span>=<span class="number">9</span>).delete()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################查询数据################</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    book=BookInfo.objects.get(<span class="built_in">id</span>=<span class="number">9</span>)</span><br><span class="line"><span class="keyword">except</span> BookInfo.DoesNotExist:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;查询结果不存在&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># all查询多个结果</span></span><br><span class="line">BookInfo.objects.<span class="built_in">all</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment"># count查询结果数量(下面两个结果一样的)</span></span><br><span class="line">BookInfo.objects.<span class="built_in">all</span>().count()</span><br><span class="line">BookInfo.objects.count()</span><br><span class="line"></span><br><span class="line"><span class="comment">################过滤查询#################################</span></span><br><span class="line"><span class="comment"># （属性__运算符=值）  注意：两个下划线</span></span><br><span class="line"><span class="comment"># filter 过滤  得到列表，多个值</span></span><br><span class="line"><span class="comment"># exclude 排除</span></span><br><span class="line"><span class="comment"># get 过滤单一结果  单个值</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询编号为1的图书</span></span><br><span class="line">BookInfo.objects.get(<span class="built_in">id</span>=<span class="number">1</span>)</span><br><span class="line">BookInfo.objects.get(id__exact=<span class="number">1</span>)</span><br><span class="line">BookInfo.objects.get(pk=<span class="number">1</span>) <span class="comment">#  pk主键</span></span><br><span class="line"><span class="comment"># 查询书名包含&#x27;湖&#x27;的图书</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(name__contains=<span class="string">&#x27;湖&#x27;</span>)</span><br><span class="line"><span class="comment"># 查询书名以&#x27;部&#x27;结尾的图书</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(name__endswith=<span class="string">&#x27;部&#x27;</span>)</span><br><span class="line"><span class="comment"># 查询书名为空的图书</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(name__isnull=<span class="literal">True</span>)</span><br><span class="line"><span class="comment"># 查询编号为1或3或5的图书</span></span><br><span class="line">BookInfo.objects.get(id__in=[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>])</span><br><span class="line"><span class="comment"># 查询编号大于3的图书</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(id__gt=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 大于 gt  大于等于 gte</span></span><br><span class="line"><span class="comment"># 小于 lt  小于等于 lte</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># 查询编号不等于3的图书</span></span><br><span class="line">BookInfo.objects.exclude(id__exact=<span class="number">3</span>)</span><br><span class="line"><span class="comment"># 查询1980年发表的图书</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(pub_date__year=<span class="string">&#x27;1980&#x27;</span>)</span><br><span class="line"><span class="comment"># 查询1999年1月1日后发表的图书</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(pub_date__gt=<span class="string">&#x27;1999-1-1&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">##############################比较###################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> F</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询阅读量大于评论量的图书</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(readcount__gt=F(<span class="string">&#x27;commentcount&#x27;</span>))</span><br><span class="line"><span class="comment"># 大于两倍</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(readcount__gt=F(<span class="string">&#x27;commentcount&#x27;</span>)*<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 并且查询</span></span><br><span class="line">BookInfo.objects.<span class="built_in">filter</span>(readcount__gt=<span class="number">20</span>).<span class="built_in">filter</span>(id__lt=<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># Q函数实现或者</span></span><br><span class="line"><span class="comment"># Q(属性__运算符=值)</span></span><br><span class="line"><span class="comment"># 可以用逻辑与&amp;、逻辑或|，连接</span></span><br><span class="line"><span class="comment"># 逻辑非~</span></span><br><span class="line"></span><br><span class="line"><span class="comment">###################聚合函数##############################</span></span><br><span class="line"><span class="keyword">from</span> django.db.models <span class="keyword">import</span> Sum, Max, Min, Avg, Count</span><br><span class="line"><span class="comment">#  求和</span></span><br><span class="line">BookInfo.objects.aggregate(Sum(<span class="string">&#x27;readcount&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 排序</span></span><br><span class="line">BookInfo.objects.<span class="built_in">all</span>().order_by(<span class="string">&#x27;readcount&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">##############跨表查询################</span></span><br><span class="line"><span class="comment"># 一对多</span></span><br><span class="line"><span class="comment"># 查询借到过书籍id为1的所有人的信息(先查找书籍，再找人)</span></span><br><span class="line">book = BookInfo.objects.get(<span class="built_in">id</span>=<span class="number">1</span>)</span><br><span class="line">book.peopleinfo_set.<span class="built_in">all</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查询人物为1的书籍（先查询人物，再找书）</span></span><br><span class="line">person = PeopleInfo.objects.get(<span class="built_in">id</span>=<span class="number">9</span>)</span><br><span class="line">person.book.name</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>查询集QuerySet的两大特性：惰性查询，缓存，限制查询集，分页</p><p>创建查询数据集不会访问数据库，如</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">book = BookInfo.objects.<span class="built_in">all</span>()</span><br></pre></td></tr></table></figure><p>继续遍历查询数据集，才会访问数据库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> book <span class="keyword">in</span> books:</span><br><span class="line">    <span class="built_in">print</span>(book.name)</span><br></pre></td></tr></table></figure><ul><li><p>限制查询集</p><p>对查询完的数据进行切片 [0:2]  前闭后开</p></li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.991Z</published>
    <updated>2025-06-19T08:42:53.810Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: python开发5Django</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h1>ORM(对象关系映射)</h1><h3 id="1-定义模型类">1.定义模型类</h3><ul><li>在models文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">BookInfo</span>(models.Model):</span><br><span class="line">    name = models.CharField(max_length=<span class="number">18</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写 str方法以让admin显示书籍名称</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">PeopleInfo</span>(models.Model):</span><br><span class="line">    name = models.CharField(max_length=<span class="number">10</span>)</span><br><span class="line">    gender = models.BooleanField()</span><br><span class="line">    <span class="comment"># 外键约束：人物属于哪本书</span></span><br><span class="line">    book = models.ForeignKey(BookInfo, on_delete=models.CASCADE)</span><br></pre></td></tr></table></figure><h3 id="2-模型迁移-建表">2.模型迁移(建表)</h3><ul><li><p>生成迁移文件</p><blockquote><p>python <a href="http://manage.py">manage.py</a> makemigrations</p></blockquote></li><li><p>执行迁移</p><blockquote><p>python <a href="http://manage.py">manage.py</a> migrate</p></blockquote></li></ul><h3 id="3-连接数据库">3.连接数据库</h3><ul><li>连接sqlite3数据库,并下载连接插件</li></ul><p><img src="D:/pro/Pictures/PixPin_2025-04-14_17-01-11.jpg" alt="PixPin_2025-04-14_17-01-11"></p><h1>站点管理</h1><ul><li><p>创建超级管理员</p><blockquote><p>python <a href="http://manage.py">manage.py</a> createsuperuser</p><p>python <a href="http://manage.py">manage.py</a> changepassword 用户名 # 重置密码</p></blockquote></li><li><p>登录站点：<a href="http://127.0.0.1:8000/admin/">http://127.0.0.1:8000/admin/</a></p></li></ul><h1>注册模型类</h1><ul><li>在子应用的admin文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin</span><br><span class="line"></span><br><span class="line"><span class="comment"># Register your models here.</span></span><br><span class="line"><span class="keyword">from</span> project.models <span class="keyword">import</span> BookInfo, PeopleInfo</span><br><span class="line"><span class="comment"># 注册模型</span></span><br><span class="line">admin.site.register(BookInfo)</span><br><span class="line">admin.site.register(PeopleInfo)</span><br><span class="line"><span class="comment"># 重新运行</span></span><br></pre></td></tr></table></figure><h3 id="添加测试用例">添加测试用例</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> bookinfo(name,pub_date,readcount,commentcount,is_delete) <span class="keyword">values</span></span><br><span class="line">(<span class="string">&#x27;射雕英雄传&#x27;</span>,<span class="string">&#x27;1980-5-1&#x27;</span>,<span class="number">12</span>,<span class="number">34</span>,<span class="number">0</span>),(<span class="string">&#x27;天龙八部&#x27;</span>,<span class="string">&#x27;1986-7-24&#x27;</span>,<span class="number">36</span>,<span class="number">40</span>,<span class="number">0</span>),(<span class="string">&#x27;笑傲江湖&#x27;</span>,<span class="string">&#x27;1995-12-24&#x27;</span>,<span class="number">20</span>,<span class="number">80</span>,<span class="number">0</span>),(<span class="string">&#x27;雪山飞狐&#x27;</span>,<span class="string">&#x27;1987-11-11&#x27;</span>,<span class="number">58</span>,<span class="number">24</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> peopleinfo(name,gender,book_id,description,is_delete) <span class="keyword">values</span> </span><br><span class="line">(<span class="string">&#x27;郭靖&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;降龙十八掌&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;黄蓉&#x27;</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;打狗棍法&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;黄药师&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;弹指神通&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;欧阳锋&#x27;</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="string">&#x27;蛤功&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;梅超风&#x27;</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="string">&#x27;九阴白骨爪&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;乔峰&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;降龙十八掌&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;段誉&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;六脉神剑&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;虚竹&#x27;</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="string">&#x27;天山六阳掌&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;王语嫣&#x27;</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="string">&#x27;神仙姐姐&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;令狐冲&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;独孤九剑&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;任盈盈&#x27;</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="string">&#x27;弹琴&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;岳不群&#x27;</span>,<span class="number">1</span>,<span class="number">3</span>,<span class="string">&#x27;华山剑法&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;东方不败&#x27;</span>,<span class="number">0</span>,<span class="number">3</span>,<span class="string">&#x27;葵花宝典&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;胡斐&#x27;</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="string">&#x27;胡家刀法&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;苗若兰&#x27;</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="string">&#x27;黄衣&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;程灵素&#x27;</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="string">&#x27;医术&#x27;</span>,<span class="number">0</span>),</span><br><span class="line">(<span class="string">&#x27;袁衣&#x27;</span>,<span class="number">0</span>,<span class="number">4</span>,<span class="string">&#x27;六合拳&#x27;</span>,<span class="number">0</span>);</span><br></pre></td></tr></table></figure><h2 id="shell工具">shell工具</h2><ul><li>所见即所得，在shell里测试代码</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python manage.py shell</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.989Z</published>
    <updated>2025-06-20T01:31:09.421Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: python开发4Django</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h1>Django框架</h1><ul><li>Web应用处理流程</li></ul><p><img src="D:/pro/Pictures/PixPin_2025-04-11_15-01-41.jpg" alt="PixPin_2025-04-11_15-01-41"></p><ul><li><p>发音：zhang gou（张狗）</p></li><li><p>遵循MVC模式，model-view-controller</p></li></ul><p><img src="D:/pro/Pictures/PixPin_2025-04-11_15-11-29.jpg" alt="PixPin_2025-04-11_15-11-29"></p><ul><li><p>model:对数据库进行访问，对数据库的数据增删改查；</p></li><li><p>view:封装结果，以html页面形式展示；</p></li><li><p>controller：接受请求，处理业务逻辑，与model和view交互，返回结果</p></li><li><p><strong>Django是MVT模式，T是Template，和controller一样</strong></p></li></ul><h2 id="创建虚拟环境">创建虚拟环境</h2><blockquote><h3 id="Linux">Linux</h3><p>mkvirtualenv -p python3 虚拟环境名   # 若不加python3，默认python2</p><p>rmvirtualenv 虚拟环境名  # 移除环境</p><p>deactivate # 退出当前环境</p><p>workon # 罗列环境</p><p>workon 虚拟环境名 # 切换环境</p><h3 id="conda">conda</h3><p>conda create -n 虚拟环境名 python=3.8</p><p>conda activate your_env_name</p><h3 id="cmd">cmd</h3><p>e:  # 切换到e盘</p><p>cd 文件夹   # cd Work\Code\python_code</p><h3 id="Django环境">Django环境</h3><p>conda install Django==3.2</p></blockquote><h2 id="创建项目">创建项目</h2><ul><li><p>创建工程</p><blockquote><p>django-admin startproject 工程名称</p></blockquote></li><li><p>创建子应用</p><blockquote><p>cd 工程名称</p><p>python <a href="http://manage.py">manage.py</a> startapp 子应用名称</p></blockquote></li></ul><h2 id="目录">目录</h2><p><img src="D:/pro/Pictures/PixPin_2025-04-11_16-30-10.jpg" alt="PixPin_2025-04-11_16-30-10"></p><h3 id="子应用注册项目">子应用注册项目</h3><ul><li>工程配置目录下，setttings.py中，INSTALLED_APPS中加入命令</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;子应用名称&#x27;</span>, <span class="comment"># 方案一,</span></span><br><span class="line">‘子应用名称.apps.子应用名称Config<span class="string">&#x27;,  # 方案二</span></span><br></pre></td></tr></table></figure><h3 id="启动项目">启动项目</h3><blockquote><p>python <a href="http://manage.py">manage.py</a> runserver</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.988Z</published>
    <updated>2025-06-20T01:31:31.694Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: python开发3Git</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h1>Git</h1><ul><li>源代码管理软件</li><li>版本控制</li></ul><p><img src="D:/pro/Pictures/PixPin_2025-04-10_16-17-57.jpg" alt="PixPin_2025-04-10_16-17-57"></p><ul><li><p>创建目录和文件</p><blockquote><p>mkdir 文件夹名</p><p>touch 文件名</p></blockquote></li><li><p>git命令</p><blockquote><p>git init 初始化</p><p>git config <a href="http://user.name">user.name</a> 名字  告知仓库谁管理</p><p>git config user.email 邮箱</p><p>git add 文件夹或文件 提交的暂存区 / git add .</p><p>git commit -m “备注”   提交到仓库区</p><p>git push</p><p>git reset --hard HEAD^ 回退一个版本,一个^代表一个版本</p><p>git reflog 版本记录</p><p>git reset --hard 版本号 回退到某个版本</p><p>git reset HEAD <a href="http://login.py">login.py</a> 由暂存区恢复到工作区</p></blockquote></li></ul><h1>实例</h1><ul><li>复制仓库地址</li></ul><p><img src="D:/pro/Pictures/PixPin_2025-04-14_09-32-02.jpg" alt="PixPin_2025-04-14_09-32-02"></p><ul><li><p>空文件夹内，右键选择git bash here</p></li><li><p>克隆远程仓库</p><blockquote><p>git clone <a href="https://github.com/alan-pro/python_code.git">https://github.com/alan-pro/python_code.git</a></p></blockquote></li></ul><h1>问题</h1><blockquote><p>$ git add .<br>warning: in the working copy of ‘.idea/inspectionProfiles/Project_Default.xml’, LF will be replaced by CRLF the next time Git touches it<br>warning: in the working copy of ‘.idea/inspectionProfiles/profiles_settings.xml’, LF will be replaced by CRLF the next time Git touches it<br>warning: in the working copy of ‘cv2_size/Pipfile’, LF will be replaced by CRLF the next time Git touches it<br>warning: in the working copy of ‘cv2_size/dist/size_gui/_internal/numpy.libs/.load-order-numpy-2.0.2’, LF will be replaced by CRLF the next time Git touches it<br>warning: in the working copy of ‘cv2_size/dist/size_gui/_internal/scipy.libs/.load-order-scipy-1.13.1’, LF will be replaced by CRLF the next time Git touches it<br>warning: in the working copy of ‘cv2_size/ui/size_gui.ui’, LF will be replaced by CRLF the next time Git touches it</p></blockquote><ul><li><p>原因</p><p>**LF（Line Feed）<strong>和</strong>CRLF（Carriage Return + Line Feed）**是两种不同的行结束符表示方式。</p><ul><li><strong>LF</strong> 是 Unix/Linux 和 macOS 系统中常用的行结束符。</li><li><strong>CRLF</strong> 是 Windows 系统中常用的行结束符。</li></ul></li><li><p>解决方法</p><blockquote><p>git config core.autocrlf true #配置仅在当前仓库</p><p>git config --global core.autocrlf true  #适应于所有仓库</p></blockquote></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.986Z</published>
    <updated>2025-06-19T08:38:04.867Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: python开发2Redis</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h1>Redis</h1><p>Redis是一个服务端-客户端模式</p><h2 id="服务端">服务端</h2><ul><li><p>服务端命令为redis-server</p></li><li><p>help命令查看帮助文档</p><blockquote><p>redis-server --help</p></blockquote></li><li><p>其它命令</p><blockquote><p>ps aux | grep redis 查看redis服务器进程</p><p>sudo kill -9 pid 杀死redis服务器</p><p>sudo redis-server /etc/redis/redis.conf指定加载的配置文件</p></blockquote></li></ul><h2 id="客户端">客户端</h2><ul><li><p>命令为redis-cli</p></li><li><p>redis-cli --help</p></li><li><p>连接redis</p><blockquote><p>redis-cli</p></blockquote></li></ul><h2 id="数据结构">数据结构</h2><p><img src="D:/pro/Pictures/PixPin_2025-04-09_20-48-28.jpg" alt="PixPin_2025-04-09_20-48-28"></p><ul><li><p>设置与查看kv值</p><blockquote><p>set key值 value值  设置kv值</p><p>get key值   查看kv值</p><p>select 15   切换0到15数据库</p></blockquote></li><li><p>设置过期</p><blockquote><p>setex key值 seconds秒 value  例如验证码过期</p><p>ttl key值   查看过期时间</p><p>expire key seconds秒  设置过期</p></blockquote></li><li><p>其它</p><blockquote><p>key * 查看所有key值</p><p>mset key value key value 设置多个kv值</p><p>exists key 查看是否存在</p><p>type key 查看类型</p><p>del key key key 删除</p></blockquote></li></ul><h3 id="哈希设置">哈希设置</h3><ul><li><p>添加和获取</p><blockquote><p>hset 哈希表名 k v</p><p>hget 哈希表名 k</p></blockquote></li><li><p>查看</p><blockquote><p>hkeys 表名  查看所有k</p><p>hvals 表名 查看所有v</p></blockquote></li></ul><h3 id="列表设置">列表设置</h3><ul><li><p>添加和获取</p><blockquote><p>lpush key value value  添加，l指的是左面插入，r是右面插入</p><p>lrange key index  index  查看第几个到第几个的值，有序</p></blockquote></li><li><p>删除</p><blockquote><p>lrem key count value</p><p>若count=0，删除所有value；若count&gt;0，从左往右删除count个value；若&lt;0，反之。</p></blockquote></li></ul><h3 id="集合">集合</h3><ul><li><p>添加和查看</p><blockquote><p>sadd key member member 设置key和成员</p><p>smembers key 查看成员，成员重复只显示一个，且无序</p></blockquote></li><li><p>删除</p><blockquote><p>srem key member</p></blockquote></li></ul><h3 id="有序集合">有序集合</h3><ul><li><p>添加和查看</p><blockquote><p>zadd key score1 member1 score2 member2</p><p>zrange key start stop 第几个到第几个</p></blockquote></li><li><p>删除指定元素</p><blockquote><p>zrem key member1 member2</p></blockquote></li></ul><h1>Redis安装</h1><blockquote><p>pip install redis</p></blockquote><ul><li><p>调用redis</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">form redis <span class="keyword">import</span> Redis</span><br><span class="line"><span class="comment"># 创建redis-cli类实例</span></span><br><span class="line">redis_cli=Redis(host=<span class="string">&quot;localhost&quot;</span>,</span><br><span class="line">            port= <span class="number">6379</span>,</span><br><span class="line">            db=<span class="number">0</span>)</span><br><span class="line">redis_cli.<span class="built_in">set</span>(<span class="string">&quot;key&quot;</span>, <span class="string">&quot;value&quot;</span>)</span><br><span class="line">name=redis_cli.get(<span class="string">&quot;key&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(name) <span class="comment"># value</span></span><br><span class="line">redis_cli.delete(<span class="string">&quot;key&quot;</span>)</span><br></pre></td></tr></table></figure></li></ul><p>文档：<a href="http://django-redis-chs.readthedocs.io/zh">django-redis-chs.readthedocs.io/zh</a> CN/latest/</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.980Z</published>
    <updated>2025-06-20T01:20:27.988Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: python开发1Redis</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h1>1.Redis</h1><p><strong>Redis是一个高性能的Key-Value数据库</strong></p><ul><li>C语言编写的</li><li>实习缓存、队列系统的不同角色</li><li>中文网站（<a href="http://redis.cn">redis.cn</a>）</li></ul><h2 id="Redis特性（同其它可以-value缓存产品）">Redis特性（同其它可以-value缓存产品）</h2><ul><li>支持数据的持久化，即将内存的数据保存在磁盘上，重启时可再次加载</li><li>Redis不仅仅支持简单的kv类型的数据，还可提供list、set、zset、hash等数据结构的存储</li><li>支持数据备份，即master-slave模式的数据备份</li></ul><h2 id="Redis优势">Redis优势</h2><ul><li>性能极高</li><li>丰富的数据类型----支持二进制的Strings（字符串），Lists（列表），Hashes（哈希表），Sets（集合）及Ordered Sets（有序集合）数据类型操作</li><li>所有操作都是原子性的</li><li>丰富的特性—支持publish/subscribe（发布/订阅），通知，key过期等特性</li></ul><h2 id="Redis应用场景">Redis应用场景</h2><ul><li>用作缓存---------所有数据放在内存中（内存数据库）</li><li>特定场景替代传统数据库----比如社交类的应用</li><li>实现特定功能----session共享，购物车</li></ul><h2 id="Redis配置">Redis配置</h2><ul><li><p>查看配置信息：</p><blockquote><p>sudo vi 目录</p></blockquote></li><li><p>绑定ip</p><blockquote><p>bind 127.0.0.1 或真实ip</p></blockquote></li><li><p>端口，默认6379</p><blockquote><p>port 6379</p></blockquote></li><li><p>是否以守护进程运行（后台进程），推荐yes</p><blockquote><p>daemonize yes</p></blockquote></li><li><p>数据文件</p><blockquote><p>dbfilename dump.rdb</p></blockquote></li><li><p>数据文件存储路径</p><blockquote><p>dir /var/lib/redis</p></blockquote></li><li><p>日志文件</p><blockquote><p>logfile “/var/log/redis/redis-server.log”</p></blockquote></li><li><p>数据库默认16个</p><blockquote><p>database 16</p></blockquote></li><li><p>主从复制（双机备份）</p><blockquote><p>slaveof</p></blockquote></li></ul><h1>2.NoSQL</h1><ul><li>非关系型数据库（not only sql）</li><li>不支持sql语法</li><li>nosql存储数据都是kv形式</li><li>nosql数据库语言不通用</li><li>包括：Redis、Mongodb（<strong>蒙戈DB</strong>。“芒果DB”）存文档、Hbase hadoop（<strong>HBase哈杜普</strong>）处理海量数据、Cassandra hadoop（<strong>卡桑德拉 哈杜普</strong>）</li></ul><h2 id="NoSQL与SQL数据库区别：">NoSQL与SQL数据库区别：</h2><ul><li>sql数据库适用于关系特别复杂的数据查询场景，nosql反之；</li><li>sql对事务（要么一起成功，要么一起失败）的支持非常完善，nosql基本不支持事务</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-06-19T08:31:50.978Z</published>
    <updated>2025-06-20T01:09:28.427Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">title: Agent开发（智能体）</span><br><span class="line">mathjax: true</span><br><span class="line"><span class="keyword">tags:</span></span><br><span class="line">  - 计算机基础</span><br><span class="line">categories:</span><br><span class="line">  - 计算机基础</span><br><span class="line">date: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br><span class="line">updated: 2025<span class="string">-03</span><span class="string">-25</span> 20:01:16</span><br></pre></td></tr></table></figure><h2 id="基础知识">基础知识</h2><ul><li>Ollama（欧拉玛）：主要用于消费者，个人开发者</li><li>VLLM：企业在用，大规模在线推理服务，高并发处理，模型支持主流的Hugging Face模型，使用python包、openAI兼容API、Docker</li></ul><p>开发软件：</p><p>小用户：Dify</p><p>大用户：LangChain</p><p>面向开发者，要求灵活性，高并发性，分布式，性能，可定制化</p>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight subunit&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span cla</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title></title>
    <link href="https://wenblog.org.edu.kg/posts/0.html"/>
    <id>https://wenblog.org.edu.kg/posts/0.html</id>
    <published>2025-05-06T02:17:18.268Z</published>
    <updated>2025-05-06T02:30:13.817Z</updated>
    
    <content type="html"><![CDATA[<h1>问题</h1><blockquote><p>{<br>“ClassificationSystem” : [<br>{<br>“CName” : “背景值”,<br>“Code” : “0”,<br>“Color” : “0,0,0”,<br>“EName” : “nodata”<br>},<br>{<br>“CName” : “旱地”,<br>“Code” : “12”,<br>“Color” : “255,215,0”,<br>“EName” : “dry farm”<br>}<br>]<br>}<br>{<br>“ClassificationSystem” : [<br>{<br>“CName” : “背景值”,<br>“Code” : “0”,<br>“Color” : “0,0,0”,<br>“EName” : “nodata”<br>},<br>{<br>“CName” : “旱地”,<br>“Code” : “12”,<br>“Color” : “255,215,0”,<br>“EName” : “dry farm”<br>}<br>]<br>}<br>里面有两个相同的&quot;ClassificationSystem&quot;,只要一个</p></blockquote><h3 id="使用-json-JSONDecoder-手动解析"><strong>使用 <code>json.JSONDecoder</code> 手动解析</strong></h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="title">with</span> open(file_path, <span class="string">&#x27;r&#x27;</span>, encoding=&#x27;utf-<span class="number">8</span>&#x27;) <span class="keyword">as</span> f:</span><br><span class="line">    content = f.read()</span><br><span class="line">    decoder = json.<span class="type">JSONDecoder</span>()</span><br><span class="line">    # 只解析第一个 <span class="type">JSON</span> 对象</span><br><span class="line">    <span class="class"><span class="keyword">data</span>, idx = decoder.raw_decode(<span class="title">content</span>)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;问题&lt;/h1&gt;
&lt;blockquote&gt;
&lt;p&gt;{&lt;br&gt;
“ClassificationSystem” : [&lt;br&gt;
{&lt;br&gt;
“CName” : “背景值”,&lt;br&gt;
“Code” : “0”,&lt;br&gt;
“Color” : “0,0,0”,&lt;br&gt;
“EName”</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>python开发7Django</title>
    <link href="https://wenblog.org.edu.kg/posts/bde0d894.html"/>
    <id>https://wenblog.org.edu.kg/posts/bde0d894.html</id>
    <published>2025-03-25T12:01:16.000Z</published>
    <updated>2025-03-25T12:01:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1>Session</h1><ul><li>Django项目默认启动Session。可以保存在数据库或内存，也可以混合存储</li><li>将session放入redis，放入内存</li></ul><h1>面向对象</h1><ul><li><p>三大特性</p><p>封装：把属性和方法捆绑在一起，对外隐藏实现细节（类（Class）方法来封装属性和方法）</p><p>继承：允许一个子类获取父类的属性和方法，同时可以扩展和修改它们（子类重写方法，多继承（class view(a, b)））</p><p>多态：同一操作作用于不同的类的实例，会有不同的执行结果（使用相同方法调用不同类的实例，结果不同）</p></li></ul><h1>路由匹配类视图逻辑</h1><p>客户端发出请求，到服务器的总路由，再分配到子路由上，get（）和post（）方法发出响应到客户端</p><h1>多继承</h1><ul><li><p>一个类可以同时继承多个父类，遵循MEO（方法解析顺序）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">可用(类名.___mro__) 或 类名.mro()</span><br></pre></td></tr></table></figure></li><li><p>MRO顺序</p><p><img src="C:/Users/pro/AppData/Roaming/Typora/typora-user-images/image-20250617194842568.png" alt="image-20250617194842568"></p></li></ul><h1>中间件</h1><p>在每次请求和响应之间执行的方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__init__():初始化中间件时，自动调用一次</span><br><span class="line"></span><br><span class="line">process_request():请求前</span><br><span class="line"></span><br><span class="line">process_response():响应前</span><br></pre></td></tr></table></figure><h1>后端服务的项目架构</h1><p>数据存储服务：mysql</p><p>缓存服务：Redis</p><p>异步服务：Celery</p><p>消息队列：RabbitMQ、Redis、Kafka</p><p>文件存储服务：FastDFS</p><p>全文检索：Elasticsearch</p><p>部署：Nginx(负载均衡)+uwsgi</p><p>定时任务：Crontab</p><h1>同源</h1><p>需要协议，域名，端口号都相同</p><h1>CORS</h1><p>因为前端与后端不同源，使用cors实现跨域，设置白名单，前端可以获取后端的数据</p><h1>短信发送</h1><p>容联云网站，下载python版本的demo</p><p>短信验证码业务流程：</p><p>前端发送一个axios请求，包括手机号，验证码，图形验证码的UUID</p><p>后端接收请求参数，包括手机号，验证码，图形验证码的UUID</p><p>业务逻辑：验证参数，验证图片验证码，生成短信验证码，保存短信验证码，发送短信验证码</p><p>响应：返回响应{‘code’:0, ‘errmsg’:‘ok’}</p><h3 id="管道技术">管道技术</h3><p>通过一个队列，一次同时包含多个请求，降低服务器频繁调用radis，提高执行效率</p><h3 id="异步Celery">异步Celery</h3><ul><li>生产者-消费者模式，使用消息队列（中间人：broker）分割（解耦）协调生产者和消费者</li><li>消息队列不执行任务，存储和转发任务</li><li>Celery可以实现存储转发任务，也可以实现执行任务</li></ul><h3 id="记住密码">记住密码</h3><p>是设置session过期时间，不是浏览器的记住账号和密码</p><h3 id="itsdangerous数据加密">itsdangerous数据加密</h3><p>itsdangerous对openid进行加密和解密。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;Session&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Django项目默认启动Session。可以保存在数据库或内存，也可以混合存储&lt;/li&gt;
&lt;li&gt;将session放入redis，放入内存&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;面向对象&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;三大特性&lt;/</summary>
      
    
    
    
    <category term="计算机基础" scheme="https://wenblog.org.edu.kg/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="计算机基础" scheme="https://wenblog.org.edu.kg/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>关于python的一些问题</title>
    <link href="https://wenblog.org.edu.kg/posts/4bfb6141.html"/>
    <id>https://wenblog.org.edu.kg/posts/4bfb6141.html</id>
    <published>2024-06-29T13:51:31.000Z</published>
    <updated>2024-06-29T13:51:31.000Z</updated>
    
    <content type="html"><![CDATA[<h1>python问题</h1><ul><li><p>相对引用问题</p></li><li><pre><code>from ..modeling.image_encoder import DTEncoder<figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">```  <span class="built_in">shell</span></span><br><span class="line">ImportError: attempted <span class="built_in">relative</span> import <span class="keyword">with</span> no known parent package</span><br></pre></td></tr></table></figure></code></pre></li></ul><p>解决：</p><p><img src="https://i.postimg.cc/jSYj7ssb/1719669469.png" alt=""></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在上一级设为Sources，要引用下级文件直接用绝对路径引用</span><br></pre></td></tr></table></figure><p><img src="https://i.postimg.cc/DzMQFJTh/1719669749.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;python问题&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;相对引用问题&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;pre&gt;&lt;code&gt;from ..modeling.image_encoder import DTEncoder
&lt;figure class=&quot;highlight live</summary>
      
    
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>bug</title>
    <link href="https://wenblog.org.edu.kg/posts/358cbf14.html"/>
    <id>https://wenblog.org.edu.kg/posts/358cbf14.html</id>
    <published>2024-04-28T11:09:10.000Z</published>
    <updated>2024-04-28T11:09:10.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="FileNotFoundError-WinError-3-系统找不到指定的路径。-‘e-SegmentationClass’">FileNotFoundError: [WinError 3] 系统找不到指定的路径。: ‘e:/SegmentationClass’</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">VOCdevkit_path      = <span class="string">&quot;e:/Datasets/LoveDA&quot;</span></span><br><span class="line">segfilepath     = os.path.join(VOCdevkit_path, <span class="string">&#x27;/SegmentationClass&#x27;</span>)</span><br></pre></td></tr></table></figure><p>'/SegmentationClass’加入“/”，从最后一个以”/”开头的参数开始拼接，之前的参数全部丢弃。</p><p>输出：e:/SegmentationClass</p><p>正确输入：'SegmentationClass’会自动填补“/”</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;FileNotFoundError-WinError-3-系统找不到指定的路径。-‘e-SegmentationClass’&quot;&gt;FileNotFoundError: [WinError 3] 系统找不到指定的路径。: ‘e:/SegmentationClass’&lt;</summary>
      
    
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>MEA-EFFormer</title>
    <link href="https://wenblog.org.edu.kg/posts/d3bdf607.html"/>
    <id>https://wenblog.org.edu.kg/posts/d3bdf607.html</id>
    <published>2024-04-28T11:09:10.000Z</published>
    <updated>2024-04-28T11:09:10.000Z</updated>
    
    <content type="html"><![CDATA[<h1><strong>MEA-EFFormer：基于增强特征Transformer的多尺度有效注意力算法及其在高光谱图像分类中的应用</strong></h1><p><img src="https://i.postimg.cc/0yD1hzbh/1714313204.png" alt=""></p><h3 id="主旨">主旨</h3><p>考虑光谱与空间特征的深层联系</p><h3 id="创新点">创新点</h3><ul><li><p>局部二进制模式（LBP）提取局部空间特征</p><p>该方法最早在1996年提出，是纹理分类和人脸识别领域的主要特征提取方法之一。</p><p><img src="https://img-blog.csdn.net/20160610171624094" alt=""></p></li></ul><p>优势：</p><p>1)计算复杂度低;</p><p>2)无需训练学习;</p><p>3)光照不变性;</p><p>4)灰度不变性；</p><p>5)旋转不变性。</p><p>方法：以3×3矩阵中心点为阈值，四周比它大的或等于它的值设为1，比它小的设为0，从x轴的正方向出发逆时针转动，2的指数从0到7设计相同形状的3×3矩阵并将二进制转为十进制数字，两个矩阵相同位置的元素相乘，得到一个局部二进制模式。</p><p><img src="https://i.postimg.cc/2y7RdbLR/1714310446.png" alt=""></p><p>其中S_lbp是相邻像素的二进制位，I（x，y）是相邻像素的灰度值，并且I_c是中心像素的灰度值。P是邻域中像素的数量，R是邻域的半径，并且（x_p，y_p）是邻域中像素的坐标。</p><ul><li><p>混合二维卷积（2D-CNN）和三维卷积（3D-CNN）提取局部特征，Transformer提取全局特征</p><p>引用一篇论文研究发现二维卷积擅长利用空间特征，但不擅长利用光谱信息；三维卷积同时擅长利用空间特征和光谱信息。介绍多篇论文中的混合卷积模型，要比单使用三维卷积的模型复杂度低，参数减少，增强分类能力等。</p><p>三维卷积方面使用多尺度卷积，即使用不同大小的卷积核在同一时刻分别进行卷积操作，之后改变形状在进行二维卷积，与之前二维卷积的信息进行残差相加。</p></li></ul><h3 id="网络结构核心">网络结构核心</h3><ul><li>多尺度有效注意特征提取模块</li><li>光谱-空间特征增强注意模块</li><li>Transformer编码器</li></ul><h3 id="主要贡献">主要贡献</h3><ul><li>MEA-EFFormer是一个多尺度高效的注意力特征提取模块，它将高效的通道注意力机制与多尺度卷积相结合。它有利于挖掘光谱-空间信息中的细节，并解决了单尺度采样过程中细粒度特征丢失的问题。</li><li>MEA-EFFormer使用SSEA模块。该方法基于C-H、C-W和H-W三个方向，捕捉LBP的频谱-空间信息之间的依赖关系，细化特征的尺度，提高注意机制的感知能力。</li><li>MEA-EFFormer的分类性能优于几种经典方法和SOTA方法。在所有三个知名数据集上的实验表明，该方法具有良好的分类性能。</li></ul><h3 id="网络模型图">网络模型图</h3><p><img src="https://i.postimg.cc/yNKKCtrV/1714306452.png" alt=""></p><ul><li><p>主成分分析（PCA）：对图像形状（m×n×l，长、宽、原始高光谱图像的所有波段数）保留最重要的波段，降维成图像形状（m×n×b，长、宽、PCA后的波段数）</p><p>优点：减少特征的维度，降低过拟合的风险</p></li><li><p>Eifficient CA（ECA，高效通道注意力）：使用全局平均池化（GAP）将图像压缩成形状（1×1×C），在使用带有自适应卷积核的一维卷积操作（1×1卷积核）计算每个波段的权重，再引用sigmoid激活函数来映射0和1之间的权重</p></li><li><p>Spectral–Spatial Enhancement Attention（SSEA，光谱-空间增强注意力）：</p><p><img src="https://i.postimg.cc/MKqySqjr/1714312584.png" alt=""></p><p>1、沿着H轴逆时针旋转90度，得到形状（W×H×C），再进行平均池化，最大池化，二维卷积操作；</p><p>2、沿着W轴逆时针旋转90度，得到形状（ H×C×W），再进行平均池化，最大池化，二维卷积操作；</p><p>3、不旋转，原始形状（C×W×H），再进行平均池化，最大池化，二维卷积操作；</p></li></ul><h3 id="总结">总结</h3><p>在本文中，我们提出了一种方法称为多尺度有效的注意力和增强的特征Transformer（MEA-EFFormer）的高光谱图像分类。我们通过多尺度有效的注意特征提取模块获得进一步细化的频谱空间信息。然后将联合收割机的二维卷积特征与局部二值模式（LBP）空间信息相结合，有效地提高了特征的表示能力。然后，我们使用频谱-空间增强注意模块，使特征增强。最后，我们通过Transformer编码器对这些特征进行分类。</p><h3 id="知识点">知识点</h3><ul><li><strong>多尺度卷积（比如特征金字塔）的优势</strong>：<ul><li><strong>多尺度信息</strong>：可以在不同层级的网络中提取特征来获取多尺度信息。在目标检测任务中，目标可能以不同的尺寸出现在图像中，因此需要在不同尺度上进行检测和定位。通过合并不同层次的特征图，可以检测和识别不同尺寸的目标。</li><li><strong>上下文信息</strong>：通过在不同的层级中提取特征，可以捕获更广泛的上下文信息。较深层次的特征通常对于全局语义信息具有较好的把握，而较浅层次的特征可以提供更多局部细节信息。通过多尺度卷积，算法可以在不同层级上同时利用全局和局部信息，从而更好地理解图像内容。</li><li><strong>减少信息丢失</strong>：在深度卷积神经网络中，随着网络层数的增加，特征图的尺寸逐渐减小。这可能导致信息丢失，特别是对于较小目标或细节。通过融合多个尺度的特征，可以减少信息丢失的影响，提高网络的能力。</li></ul></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;&lt;strong&gt;MEA-EFFormer：基于增强特征Transformer的多尺度有效注意力算法及其在高光谱图像分类中的应用&lt;/strong&gt;&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/0yD1hzbh/1714313204.png&quot;</summary>
      
    
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>ViT模型详解</title>
    <link href="https://wenblog.org.edu.kg/posts/9336d039.html"/>
    <id>https://wenblog.org.edu.kg/posts/9336d039.html</id>
    <published>2024-04-01T08:23:09.000Z</published>
    <updated>2024-04-01T08:23:09.000Z</updated>
    
    <content type="html"><![CDATA[<h1>一、网络结构</h1><p><img src="https://i.postimg.cc/T1wvS410/1711960028.png" alt=""></p><h1>二、详情</h1><h3 id="1、补丁嵌入">1、补丁嵌入</h3><ul><li><p>原始图像：H×W×C，高度，宽度，通道数</p></li><li><p>补丁（patch）：N×（P^2×C），</p><p>N=H×W/（P×P）叫补丁数或者输入序列长度</p><p>（P，P）叫补丁的分辨率</p></li></ul><blockquote><p>将图像分割成多个补丁（patch），将补丁平铺成一维数据格式，再通过线性投影将补丁平坦化映射到低维空间</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Rearrange(<span class="string">&#x27;b c (h p1) (w p2) -&gt; b (h w) (p1 p2 c)&#x27;</span>, p1=patch_height, p2=patch_width)</span><br></pre></td></tr></table></figure></blockquote><h3 id="2、位置嵌入">2、位置嵌入</h3><ul><li>添加位置编码表示两个补丁之间的距离，即添加了补丁的位置信息</li></ul><blockquote><p>网络自动学习</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">self.pos_embedding = nn.Parameter(torch.randn(<span class="number">1</span>, num_patches + <span class="number">1</span>, dim))</span><br></pre></td></tr></table></figure><p>sin-cos规则</p><ul><li>将向量的维度切分为奇数行和偶数行</li><li>偶数行采用sin函数编码，奇数行采用cos函数编码</li><li>然后按照原始行号拼接</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">get_position_angle_vec</span>(<span class="params">position</span>):</span><br><span class="line">    <span class="comment"># hid_j是0-511,d_hid是512，position表示单词位置0～N-1</span></span><br><span class="line">    <span class="keyword">return</span> [position / np.power(<span class="number">10000</span>, <span class="number">2</span> * (hid_j // <span class="number">2</span>) / d_hid) <span class="keyword">for</span> hid_j <span class="keyword">in</span> <span class="built_in">range</span>(d_hid)]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 每个单词位置0～N-1都可以编码得到512长度的向量</span></span><br><span class="line">sinusoid_table = np.array([get_position_angle_vec(pos_i) <span class="keyword">for</span> pos_i <span class="keyword">in</span> <span class="built_in">range</span>(n_position)])</span><br><span class="line"><span class="comment"># 偶数列进行sin</span></span><br><span class="line">sinusoid_table[:, <span class="number">0</span>::<span class="number">2</span>] = np.sin(sinusoid_table[:, <span class="number">0</span>::<span class="number">2</span>])  <span class="comment"># dim 2i</span></span><br><span class="line"><span class="comment"># 奇数列进行cos</span></span><br><span class="line">sinusoid_table[:, <span class="number">1</span>::<span class="number">2</span>] = np.cos(sinusoid_table[:, <span class="number">1</span>::<span class="number">2</span>])  <span class="comment"># dim 2i+1</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="3、类别标记">3、类别标记</h3><ul><li>输出特征加上一个线性分类器实现分类</li></ul><blockquote><p>cls_token方式，cls位置表示向量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">self.cls_token = nn.Parameter(torch.randn(<span class="number">1</span>, <span class="number">1</span>, dim))</span><br><span class="line"></span><br><span class="line">cls_tokens = repeat(self.cls_token, <span class="string">&#x27;1 1 d -&gt; b 1 d&#x27;</span>, b=b)  <span class="comment"># 复制令牌，并生成新的转变为（B,N,D）格式的张量</span></span><br><span class="line">x = torch.cat((cls_tokens, x), dim=<span class="number">1</span>)  <span class="comment"># 类别标记拼接补丁嵌入</span></span><br></pre></td></tr></table></figure></blockquote><h3 id="4、Transformer编码器">4、Transformer编码器</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Attention</span>(nn.Module):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, dim, heads=<span class="number">8</span>, dim_head=<span class="number">64</span>, dropout=<span class="number">0.</span></span>):  <span class="comment"># dim_head每个头的维度</span></span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        inner_dim = dim_head * heads  <span class="comment"># 所有头的维度</span></span><br><span class="line">        project_out = <span class="keyword">not</span> (heads == <span class="number">1</span> <span class="keyword">and</span> dim_head == dim)  <span class="comment"># 不是一个头和每个头的维度等于总维度同时成立时，返回true</span></span><br><span class="line"></span><br><span class="line">        self.heads = heads  <span class="comment"># 注意力头数</span></span><br><span class="line">        self.scale = dim_head ** -<span class="number">0.5</span>  <span class="comment"># 缩放因子</span></span><br><span class="line"></span><br><span class="line">        self.norm = nn.LayerNorm(dim)  <span class="comment"># 层归一化</span></span><br><span class="line"></span><br><span class="line">        self.attend = nn.Softmax(dim=-<span class="number">1</span>)  <span class="comment"># 均匀分布在[0,1]之间</span></span><br><span class="line">        self.dropout = nn.Dropout(dropout)  <span class="comment"># 丢弃层</span></span><br><span class="line"></span><br><span class="line">        self.to_qkv = nn.Linear(dim, inner_dim * <span class="number">3</span>, bias=<span class="literal">False</span>)</span><br><span class="line">        <span class="comment"># inner_dim乘以三，因为输出分成查询，键，值，每个部分的维度都是inner_dim，过程相当于三次全连接层</span></span><br><span class="line"></span><br><span class="line">        self.to_out = nn.Sequential(</span><br><span class="line">            nn.Linear(inner_dim, dim),</span><br><span class="line">            nn.Dropout(dropout)</span><br><span class="line">        ) <span class="keyword">if</span> project_out <span class="keyword">else</span> nn.Identity()  <span class="comment"># 若是多头注意力，则进入全连接层，丢弃层；若不是，则恒等映射，不做任何操作输出</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        x = self.norm(x)  <span class="comment"># 层归一化</span></span><br><span class="line"></span><br><span class="line">        qkv = self.to_qkv(x).chunk(<span class="number">3</span>, dim=-<span class="number">1</span>)  <span class="comment"># 三次全连接后将最后一个维度分成三份</span></span><br><span class="line">        q, k, v = <span class="built_in">map</span>(<span class="keyword">lambda</span> t: rearrange(t, <span class="string">&#x27;b n (h d) -&gt; b h n d&#x27;</span>, h=self.heads), qkv)</span><br><span class="line">        <span class="comment"># b是batch_size,h是注意力头数，n是输入序列长度（输入图像分割成图块的数量patches）</span></span><br><span class="line"></span><br><span class="line">        dots = torch.matmul(q, k.transpose(-<span class="number">1</span>, -<span class="number">2</span>)) * self.scale  <span class="comment"># q乘以k的转置，再乘以1/根号dim_head</span></span><br><span class="line"></span><br><span class="line">        attn = self.attend(dots)  <span class="comment"># softmax</span></span><br><span class="line">        attn = self.dropout(attn)  <span class="comment"># 丢弃层</span></span><br><span class="line"></span><br><span class="line">        out = torch.matmul(attn, v)  <span class="comment"># 再乘以v</span></span><br><span class="line">        out = rearrange(out, <span class="string">&#x27;b h n d -&gt; b n (h d)&#x27;</span>)  <span class="comment"># 恢复原状</span></span><br><span class="line">        <span class="keyword">return</span> self.to_out(out)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="5、MLP多层感知机-前馈神经网络">5、MLP多层感知机/前馈神经网络</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">FeedForward</span>(nn.Module):  <span class="comment"># 前馈神经网络FFN，也叫多层感知机MLP</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, dim, hidden_dim, dropout=<span class="number">0.</span></span>):</span><br><span class="line">        <span class="built_in">super</span>().__init__()</span><br><span class="line">        self.net = nn.Sequential(</span><br><span class="line">            nn.LayerNorm(dim),  <span class="comment"># 层归一化</span></span><br><span class="line">            nn.Linear(dim, hidden_dim),  <span class="comment"># 全连接层</span></span><br><span class="line">            nn.GELU(),  <span class="comment"># GELU激活函数</span></span><br><span class="line">            nn.Dropout(dropout),  <span class="comment"># 丢弃层</span></span><br><span class="line">            nn.Linear(hidden_dim, dim),  <span class="comment"># 全连接层</span></span><br><span class="line">            nn.Dropout(dropout)  <span class="comment"># 丢弃层</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">forward</span>(<span class="params">self, x</span>):</span><br><span class="line">        <span class="keyword">return</span> self.net(x)</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;一、网络结构&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/T1wvS410/1711960028.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1&gt;二、详情&lt;/h1&gt;
&lt;h3 id=&quot;1、补丁嵌入&quot;&gt;1、补丁嵌入&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;</summary>
      
    
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>minconda常用命令</title>
    <link href="https://wenblog.org.edu.kg/posts/b73499b6.html"/>
    <id>https://wenblog.org.edu.kg/posts/b73499b6.html</id>
    <published>2024-03-25T12:01:16.000Z</published>
    <updated>2024-03-25T12:01:16.000Z</updated>
    
    <content type="html"><![CDATA[<h1>一、基础</h1><ul><li><p>查看版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda --version</span><br></pre></td></tr></table></figure></li><li><p>查看环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda config --show</span><br></pre></td></tr></table></figure></li><li><p>创建环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda create -n env_name python=3.8</span><br></pre></td></tr></table></figure></li><li><p>激活环境</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda activate env_name</span><br></pre></td></tr></table></figure><p>或</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">activate env_name</span><br></pre></td></tr></table></figure></li></ul><h1>二、安装pytorch</h1><ul><li><p>查看CUDA版本</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nvidia-smi</span><br></pre></td></tr></table></figure></li><li><p>cuda 12.1</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">conda install pytorch torchvision torchaudio pytorch-cuda=12.1 -c pytorch -c nvidia</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip3 install torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;一、基础&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;查看版本&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;</summary>
      
    
    
    
    <category term="计算机基础" scheme="https://wenblog.org.edu.kg/categories/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="计算机基础" scheme="https://wenblog.org.edu.kg/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E7%A1%80/"/>
    
  </entry>
  
  <entry>
    <title>VisionTransformer快速指南-理论和代码</title>
    <link href="https://wenblog.org.edu.kg/posts/be423323.html"/>
    <id>https://wenblog.org.edu.kg/posts/be423323.html</id>
    <published>2024-02-25T06:47:19.000Z</published>
    <updated>2024-02-25T06:47:19.000Z</updated>
    
    <content type="html"><![CDATA[<h1>0、ViT简介</h1><p><img src="https://i.postimg.cc/BQZH7s2d/1708844417.png" alt=""></p><h1>1、输入嵌入</h1><p><img src="https://i.postimg.cc/J4PP6sJV/1708843905.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;0、ViT简介&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/BQZH7s2d/1708844417.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h1&gt;1、输入嵌入&lt;/h1&gt;
&lt;p&gt;&lt;img src=&quot;https://i.postimg.cc/J4</summary>
      
    
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>FCN语义分割的开山之作</title>
    <link href="https://wenblog.org.edu.kg/posts/464d9cb7.html"/>
    <id>https://wenblog.org.edu.kg/posts/464d9cb7.html</id>
    <published>2024-02-22T02:10:41.000Z</published>
    <updated>2024-02-22T02:10:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1>一、深度学习代表问题</h1><h1>不匹配关系：SPP，ASPP、PSPNet、GFN、GCN等</h1><p>只注重局部纹理，不考虑全局关系，而将对象错分。</p><h1>不寻常类：RedNet、RDFNet</h1><p>对象纹理与背景颜色纹理相似或相同，难以区分。</p><h1>二、基础概念</h1><h3 id="1-1、conv卷积">1.1、conv卷积</h3><p><img src="https://img-blog.csdnimg.cn/20190618210936489.gif" alt=""></p><p><strong>过滤器</strong></p><img src="https://i.postimg.cc/NMs9FBFN/image.png" style="zoom: 25%;" /><p>结果第一个数：4=1x1+1x0+1x1+0x0+1x1+1x0+0x1+0x0+1x1</p><h3 id="1-2、反卷积">1.2、反卷积</h3><p><img src="https://i.postimg.cc/mZy8vCrW/1708677692.png" alt=""></p><h3 id="2、maxpool最大池化">2、maxpool最大池化</h3><p>若池化使用的滤波器是2x2，则取该对应区域内最大像素值替代该像素值。</p><h3 id="3、感受域（感受野）">3、感受域（感受野）</h3><p>stride越大，感受野越大，保留的信息越少</p><p>stride越小，感受野越少，保留的细节越多</p><h3 id="4、端到端训练">4、端到端训练</h3><p>输入是原始图像，输出是预测图像，两者大小相同。传统方式是输入是图像，输出是概率值。</p><h1>三、论文精读</h1><h3 id="1、论文摘要精读结构">1、论文摘要精读结构</h3><ul><li>卷积神经网络是什么，讲整个大背景的概述。</li><li>我们的核心观点是什么。</li><li>我们设计的神经网络能达到什么效果，有什么样的作用和功能。</li><li>为了实现这个功能我们做了什么步骤，及其创新点。</li><li>我们的模型在哪些数据集上跑出了好的结果。</li></ul><p><img src="https://i.postimg.cc/k4V3HzW2/1708585931.png" alt=""></p><h3 id="2、训练技巧">2、训练技巧</h3><p><img src="https://i.postimg.cc/Y2zrVrLy/1708678615.png" alt=""></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;一、深度学习代表问题&lt;/h1&gt;
&lt;h1&gt;不匹配关系：SPP，ASPP、PSPNet、GFN、GCN等&lt;/h1&gt;
&lt;p&gt;只注重局部纹理，不考虑全局关系，而将对象错分。&lt;/p&gt;
&lt;h1&gt;不寻常类：RedNet、RDFNet&lt;/h1&gt;
&lt;p&gt;对象纹理与背景颜色纹理相似或相同，难</summary>
      
    
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/categories/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
    
    <category term="深度学习" scheme="https://wenblog.org.edu.kg/tags/%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0/"/>
    
  </entry>
  
  <entry>
    <title>博客bug</title>
    <link href="https://wenblog.org.edu.kg/posts/b11f753d.html"/>
    <id>https://wenblog.org.edu.kg/posts/b11f753d.html</id>
    <published>2024-01-24T05:29:14.000Z</published>
    <updated>2024-01-24T05:29:14.000Z</updated>
    
    <content type="html"><![CDATA[<h1>1、ssh: connect to host <a href="http://github.com">github.com</a> port 22: Connection timed out</h1><p>原因：22端口被占用<br>解决：在.ssh下面建立config文件，内容如下：注意congig无后缀名！（可以直接复制另外两个无后缀名的文件然后直接改内容即可）</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line"><span class="keyword">User</span> <span class="title">git</span></span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port <span class="number">443</span></span><br><span class="line"> </span><br><span class="line">Host gitlab.com</span><br><span class="line">Hostname altssh.gitlab.com</span><br><span class="line"><span class="keyword">User</span> <span class="title">git</span></span><br><span class="line">Port <span class="number">443</span></span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br></pre></td></tr></table></figure><p>最后使用下列代码验证，出现<code>You've successfully authenticated, but GitHub does not provide shell access.</code>，则成功连接。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ssh</span> -T git<span class="variable">@github</span>.com</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1&gt;1、ssh: connect to host &lt;a href=&quot;http://github.com&quot;&gt;github.com&lt;/a&gt; port 22: Connection timed out&lt;/h1&gt;
&lt;p&gt;原因：22端口被占用&lt;br&gt;
解决：在.ssh下面建立confi</summary>
      
    
    
    
    <category term="hexo博客" scheme="https://wenblog.org.edu.kg/categories/hexo%E5%8D%9A%E5%AE%A2/"/>
    
    
    <category term="hexo博客" scheme="https://wenblog.org.edu.kg/tags/hexo%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
</feed>
